<?php

namespace Budget\BudgetBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SpendingsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpendingsRepository extends EntityRepository
{

    public function getByDates(\DateTime $startDate, \DateTime $endDate, array $criteria = [])
    {
        $query = $this->createQueryBuilder('spendings');
        $query
            ->select('spendings')
            ->where('spendings.date >= :startDate')
            ->andWhere('spendings.date <= :endDate')

            ->setParameters(
                [
                    'startDate' => $startDate,
                    'endDate' => $endDate
                ]
            );

        if (!empty($criteria)) {
            foreach ($criteria as $name => $value) {
                if ($value === null) {
                    $query
                        ->andWhere('spendings.' . $name . ' IS NULL');
                } else {
                    $query
                        ->andWhere('spendings.' . $name . ' = :' . $name)
                        ->setParameter($name, $value);;
                }

            }
        }

        return $query->getQuery()->getResult();
    }

    public function hasDaySpendings(\DateTime $date)
    {
        $query = $this->createQueryBuilder('spendings')
            ->select('COUNT(spendings)')
            ->where('spendings.date = :date')

            ->setParameter('date', $date->format('Y-m-d'))

            ->getQuery();

        return $query->getSingleScalarResult() != 0;

    }

    public function clearDaySpendings(\DateTime $date)
    {
        $result = $this->getEntityManager()
            ->createQuery('DELETE FROM Budget\\BudgetBundle\\Entity\\Spendings s WHERE s.date=:date')
            ->setParameter('date', $date->format('Y-m-d'))
            ->execute();

        return $result;
    }

}
